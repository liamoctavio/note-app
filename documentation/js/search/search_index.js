var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.07,1,0.478]],["body/components/AboutComponent.html",[0,0.11,1,0.803,2,1.13,3,0.494,4,0.423,5,0.947,6,0.947,7,0.947,8,0.423,9,2.376,10,0.947,11,1.775,12,1.596,13,1.274,14,3.933,15,1.274,16,3.933,17,0.494,18,0.045,19,0.423,20,0.494,21,0.494,22,3.933,23,3.197,24,3.864,25,5.108,26,4.753,27,3.933,28,4.753,29,3.197,30,3.197,31,3.933,32,3.933,33,3.933,34,3.933,35,3.933,36,3.933,37,3.933,38,3.933,39,3.933,40,3.933,41,3.933,42,3.933,43,3.933,44,3.933,45,3.933,46,3.933,47,2.061,48,3.933,49,3.933,50,3.933,51,3.933,52,2.061,53,3.933,54,3.933,55,3.933,56,3.933,57,3.933,58,3.933,59,3.933,60,3.933,61,2.35,62,2.923,63,0.742,64,1.274,65,1.274,66,0.947,67,1.539,68,0.947,69,2.923,70,0.665,71,0.947,72,0.571,73,0.947,74,0.494,75,0.947,76,0.494,77,0.947,78,0.494,79,0.947,80,0.571,81,0.947,82,0.494,83,0.947,84,0.494,85,0.947,86,0.494,87,0.84,88,0.947,89,0.947,90,0.032,91,0.032]],["title/components/AppComponent.html",[0,0.07,72,0.552]],["body/components/AppComponent.html",[0,0.111,1,0.504,2,1.145,3,0.504,4,0.432,5,0.967,6,0.967,7,0.967,8,0.432,10,0.967,11,1.781,12,1.616,13,1.292,15,1.292,17,0.759,18,0.047,19,0.432,20,0.504,21,0.504,63,0.758,64,1.292,65,1.292,66,0.967,67,1.552,68,0.967,70,0.759,71,0.967,72,0.935,73,0.967,74,0.504,75,0.967,76,0.504,77,0.967,78,0.504,79,0.967,80,0.583,81,0.967,82,0.504,83,0.967,84,0.504,85,0.967,86,0.504,87,0.857,88,0.967,89,0.967,90,0.032,91,0.032,92,2.427,93,1.637,94,2.079,95,2.383,96,3.988,97,3.988,98,0.758,99,1.145,100,4.491,101,1.292,102,2.219,103,0.967,104,2.985,105,1.874,106,1.455,107,3.988,108,0.857,109,1.013,110,0.857,111,2.985,112,0.857,113,1.225,114,1.088,115,1.088,116,1.088,117,3.988,118,1.564,119,1.225,120,1.564,121,1.382,122,2.427,123,1.564,124,1.382,125,1.088,126,1.225,127,1.564,128,2.985,129,1.846,130,3.242,131,3.988,132,2.383]],["title/modules/AppModule.html",[133,1.689,134,1.689]],["body/modules/AppModule.html",[1,0.847,3,0.464,4,0.397,8,0.397,12,0.789,17,0.945,18,0.047,19,0.397,20,0.464,21,0.464,61,1.642,63,0.698,72,1.067,74,0.847,76,0.847,78,0.847,80,0.979,82,0.847,84,0.847,86,0.847,90,0.03,91,0.03,133,1.642,134,3.438,135,1.44,136,1.642,137,3.499,138,2.968,139,3.499,140,1.895,141,2.233,142,2.233,143,2.233,144,2.233,145,2.233,146,2.628,147,2.321,148,3.065,149,2.233,150,2.747,151,3.065,152,3.065,153,3.77,154,2.233,155,1.895,156,3.77,157,1.745,158,3.77,159,2.747,160,2.747,161,1.895,162,2.747,163,2.747,164,2.233,165,2.233,166,2.233,167,2.233,168,2.747,169,2.233,170,2.233,171,2.233,172,2.233,173,2.747]],["title/modules/AppRoutingModule.html",[133,1.689,146,1.481]],["body/modules/AppRoutingModule.html",[0,0.135,1,0.728,3,0.568,4,0.486,8,0.486,17,0.933,18,0.047,19,0.486,20,0.568,21,0.568,74,0.728,76,0.804,78,0.728,82,0.728,84,0.728,86,0.728,87,0.965,90,0.035,91,0.035,119,1.379,129,1.555,135,1.761,140,2.317,146,2.258,151,2.731,152,3.503,164,2.731,165,2.731,166,2.731,167,2.731,169,2.731,170,2.731,172,2.731,174,3.36,175,3.36,176,4.309,177,2.843,178,1.379,179,5.468,180,2.731,181,2.317,182,3.36,183,2.731,184,2.731,185,3.36,186,2.008,187,3.36]],["title/injectables/AuthService.html",[188,1.16,189,1.949]],["body/injectables/AuthService.html",[3,0.603,4,0.516,8,0.516,17,0.827,18,0.047,19,0.516,20,0.603,21,0.603,70,0.757,90,0.036,91,0.036,95,2.132,98,0.906,101,1.45,103,1.156,106,1.45,108,1.286,109,1.137,110,1.286,112,1.025,114,1.784,121,1.652,161,2.461,188,1.838,189,3.088,190,2.132,191,2.901,192,3.639,193,2.901,194,4.17,195,3.569,196,3.639,197,4.477,198,3.569,199,2.346,200,3.977,201,2.132,202,2.461,203,3.569,204,2.461,205,3.569,206,3.569,207,1.87,208,1.784,209,2.461,210,3.569,211,3.569,212,4.477,213,4.477,214,1.652,215,3.569,216,2.132,217,3.569,218,2.901]],["title/components/ForgotpasswordComponent.html",[0,0.07,74,0.478]],["body/components/ForgotpasswordComponent.html",[0,0.117,1,0.564,2,1.233,3,0.564,4,0.483,5,1.081,6,1.081,7,1.081,8,0.483,10,1.081,11,1.813,12,1.608,13,1.39,15,1.39,17,0.725,18,0.046,19,0.483,20,0.564,21,0.564,63,0.848,64,1.39,65,1.39,66,1.081,67,1.621,68,1.081,70,0.725,71,1.081,72,0.652,73,1.081,74,0.846,75,1.081,76,0.564,77,1.081,78,0.564,79,1.081,80,0.652,81,1.081,82,0.564,83,1.081,84,0.564,85,1.081,86,0.564,87,0.959,88,1.081,89,1.081,90,0.035,91,0.035,157,1.545,192,3.488,218,3.488,219,2.714,220,4.291,221,4.291,222,1.995,223,1.995,224,1.995,225,3.488,226,2.249,227,2.991,228,2.564,229,3.488,230,2.959,231,3.488,232,4.291]],["title/components/HomeComponent.html",[0,0.07,76,0.478]],["body/components/HomeComponent.html",[0,0.114,1,0.533,2,1.188,3,0.533,4,0.456,5,1.022,6,1.022,7,1.022,8,0.456,10,1.022,11,1.798,12,1.594,13,1.34,15,1.34,17,0.533,18,0.046,19,0.456,20,0.533,21,0.533,29,3.363,63,0.801,64,1.34,65,1.34,66,1.022,67,1.587,68,1.022,70,0.699,71,1.022,72,0.616,73,1.022,74,0.533,75,1.022,76,0.828,77,1.022,78,0.533,79,1.022,80,0.616,81,1.022,82,0.533,83,1.022,84,0.533,85,1.022,86,0.533,87,0.906,88,1.022,89,1.022,90,0.033,91,0.033,125,1.508,130,3.363,132,2.472,180,3.363,208,1.508,233,2.565,234,4.137,235,4.137,236,4.137,237,2.853,238,4.137,239,2.472,240,4.137,241,4.137,242,3.363,243,4.137,244,4.137,245,4.137,246,4.137,247,4.137,248,2.472,249,1.915,250,4.137,251,4.137,252,4.137,253,2.472,254,2.168,255,4.137,256,4.137]],["title/components/LoginComponent.html",[0,0.07,78,0.478]],["body/components/LoginComponent.html",[0,0.087,1,0.329,2,0.844,3,0.329,4,0.281,5,0.63,6,0.63,7,0.63,8,0.281,10,0.63,11,1.635,12,1.45,13,0.952,15,0.952,17,0.667,18,0.047,19,0.281,20,0.329,21,0.329,47,1.856,63,0.494,64,0.952,65,0.952,66,0.63,67,1.278,68,0.63,70,0.598,71,0.63,72,0.38,73,0.63,74,0.329,75,0.63,76,0.329,77,0.63,78,0.667,79,0.63,80,0.38,81,0.63,82,0.329,83,0.63,84,0.329,85,0.63,86,0.329,87,0.559,88,0.63,89,0.63,90,0.024,91,0.024,93,1.206,94,1.639,98,0.494,99,0.844,101,0.952,102,1.827,103,0.952,105,1.687,106,1.609,108,0.559,109,1.076,110,0.559,112,1.133,113,1.955,114,1.625,115,1.439,116,1.439,118,2.425,119,0.798,120,1.019,122,1.581,123,1.019,124,0.9,125,0.709,126,1.206,129,2.062,132,1.756,157,0.9,178,1.454,181,2.442,186,2.358,199,2.068,207,1.019,208,1.812,209,1.341,214,0.9,222,2.358,223,2.116,224,1.162,226,2.496,227,2.532,228,1.756,229,2.389,230,2.442,231,2.389,237,2.027,248,1.756,249,1.961,253,1.162,254,1.019,257,1.581,258,2.939,259,2.939,260,2.532,261,3.542,262,3.542,263,2.922,264,2.879,265,3.946,266,3.946,267,1.341,268,2.939,269,2.027,270,1.945,271,1.945,272,1.945,273,1.945,274,2.846,275,1.54,276,1.945,277,1.945,278,1.945,279,1.945,280,1.162,281,1.945,282,1.341,283,1.341,284,1.756,285,2.939,286,1.945,287,1.945,288,1.162,289,1.639,290,1.945,291,1.945,292,1.341,293,2.027,294,1.341,295,1.341,296,1.945,297,1.945,298,1.162,299,1.341,300,1.341,301,1.945,302,1.341,303,1.341,304,1.945,305,1.341,306,1.945,307,1.581,308,1.162,309,1.341,310,1.341,311,2.879,312,1.581,313,2.939,314,2.027,315,1.961,316,1.341,317,1.945,318,1.341,319,1.945,320,1.162,321,1.945,322,1.945,323,1.945,324,1.945,325,2.389,326,2.939,327,2.939]],["title/components/NavbarComponent.html",[0,0.07,80,0.552]],["body/components/NavbarComponent.html",[0,0.103,1,0.434,2,1.033,3,0.434,4,0.371,5,0.831,6,0.831,7,0.831,8,0.371,10,0.831,11,1.734,12,1.538,13,1.165,15,1.165,17,0.701,18,0.047,19,0.371,20,0.434,21,0.434,47,1.884,63,0.651,64,1.165,65,1.165,66,0.831,67,1.457,68,0.831,70,0.701,71,0.831,72,0.501,73,0.831,74,0.434,75,0.831,76,0.434,77,0.831,78,0.434,79,0.831,80,0.878,81,0.831,82,0.434,83,0.831,84,0.434,85,0.831,86,0.434,87,0.737,88,0.831,89,0.831,90,0.029,91,0.029,93,1.476,94,1.921,98,0.651,99,1.033,101,1.165,102,2.082,103,1.165,105,1.838,106,1.534,108,0.737,109,0.913,110,0.737,112,1.192,113,2.015,115,0.936,116,0.936,118,2.573,119,1.053,120,1.345,124,1.188,125,1.727,126,1.476,127,1.345,129,1.664,178,1.053,181,2.48,208,1.513,216,1.533,249,1.921,275,2.175,289,1.664,311,2.923,314,2.48,315,1.664,328,2.086,329,3.595,330,3.595,331,3.595,332,3.657,333,3.657,334,4.498,335,2.566,336,3.595,337,2.566,338,2.566,339,2.566,340,2.149,341,2.566,342,2.086,343,1.769,344,2.149,345,4.151,346,2.566,347,1.345,348,2.566,349,2.086,350,2.086,351,2.566,352,1.533,353,1.769,354,3.595,355,2.566,356,3.595,357,3.595,358,2.923,359,2.923]],["title/components/ProfileComponent.html",[0,0.07,82,0.478]],["body/components/ProfileComponent.html",[0,0.087,1,0.327,2,0.842,3,0.327,4,0.28,5,0.628,6,0.628,7,0.628,8,0.28,10,0.628,11,1.633,12,1.449,13,0.949,15,0.949,17,0.597,18,0.047,19,0.28,20,0.327,21,0.327,47,1.016,63,0.492,64,0.949,65,0.949,66,0.628,67,1.276,68,0.628,70,0.752,71,0.628,72,0.378,73,0.628,74,0.327,75,0.628,76,0.327,77,0.628,78,0.327,79,0.628,80,0.378,81,0.628,82,0.666,83,0.628,84,0.327,85,0.628,86,0.327,87,0.557,88,0.628,89,0.628,90,0.024,91,0.024,93,1.203,94,1.636,98,0.492,99,0.842,101,0.949,102,1.823,103,0.628,105,1.685,106,1.541,108,0.557,109,1.074,110,0.557,112,1.015,113,1.826,114,1.436,115,1.288,116,1.685,120,1.016,121,0.897,124,0.897,125,1.436,126,1.617,127,1.016,157,0.897,178,1.45,184,2.382,186,2.354,199,1.852,207,1.536,208,1.068,216,2.354,222,2.354,223,2.112,224,1.158,225,1.575,226,2.064,227,1.751,228,1.751,239,1.751,253,1.158,254,2.217,260,2.528,263,2.917,267,1.336,269,2.021,274,2.843,275,1.536,280,2.112,284,1.158,288,1.751,289,0.897,292,1.336,293,2.716,294,1.336,295,1.336,298,1.158,299,1.336,300,2.437,305,1.336,308,2.528,309,1.336,310,1.336,315,0.897,320,1.751,340,1.751,343,1.336,344,1.158,347,1.016,352,1.158,358,2.872,360,1.575,361,2.93,362,2.93,363,3.533,364,3.533,365,3.939,366,3.939,367,2.93,368,1.938,369,1.938,370,1.938,371,1.938,372,1.938,373,1.938,374,1.938,375,3.939,376,1.938,377,2.93,378,2.021,379,2.528,380,2.93,381,1.336,382,1.938,383,1.938,384,1.938,385,1.938,386,3.939,387,2.872,388,2.382,389,1.938,390,1.938,391,3.533,392,1.938,393,1.938,394,1.938,395,1.938,396,1.938,397,1.938,398,1.938,399,1.938,400,2.872,401,1.938,402,1.938,403,1.938,404,1.938,405,1.575,406,1.575,407,1.938,408,1.938,409,1.938,410,1.575,411,1.575,412,1.336,413,1.575,414,3.202,415,2.382]],["title/components/RegisterComponent.html",[0,0.07,84,0.478]],["body/components/RegisterComponent.html",[0,0.066,1,0.215,2,0.604,3,0.215,4,0.184,5,0.413,6,0.413,7,0.413,8,0.184,10,0.413,11,1.454,12,1.29,13,0.681,15,0.681,17,0.526,18,0.047,19,0.184,20,0.627,21,0.215,63,0.324,64,0.681,65,0.681,66,0.413,67,1.009,68,0.413,70,0.663,71,0.413,72,0.249,73,0.413,74,0.215,75,0.413,76,0.215,77,0.413,78,0.215,79,0.413,80,0.249,81,0.413,82,0.215,83,0.413,84,0.526,85,0.413,86,0.215,87,0.366,88,0.413,89,0.413,90,0.017,91,0.017,93,0.863,94,1.242,98,0.324,99,0.604,101,0.681,102,1.442,103,0.413,106,1.271,108,0.604,109,0.875,110,0.604,112,0.771,113,1.279,114,0.979,115,0.767,116,1.431,118,2.057,119,0.523,121,0.59,123,0.668,124,0.59,125,1.797,126,0.523,127,1.632,129,0.59,157,0.973,178,1.883,183,1.709,186,2.217,199,1.806,204,2.706,207,1.407,208,1.755,209,2.559,214,2.282,216,2.217,222,1.861,223,1.604,224,1.257,226,2.693,227,2.683,228,2.345,239,1.604,242,2.802,248,1.257,249,0.973,253,0.762,254,0.668,260,1.604,267,0.879,269,1.45,274,2.541,275,1.632,280,1.257,282,1.45,284,1.257,288,2.617,289,0.59,292,0.879,293,2.148,294,0.879,295,0.879,298,0.762,299,0.879,300,0.879,302,0.879,303,0.879,308,0.762,312,1.709,314,1.45,315,2.256,316,1.851,318,1.851,320,1.861,325,3.65,340,1.604,344,0.762,347,0.668,349,1.036,379,0.762,387,2.802,410,1.709,411,1.709,412,0.879,413,1.036,415,1.709,416,0.879,417,2.103,418,2.103,419,2.684,420,2.684,421,3.115,422,2.103,423,2.103,424,1.274,425,1.274,426,2.103,427,4.252,428,1.274,429,1.274,430,2.103,431,1.274,432,1.274,433,2.684,434,2.182,435,1.274,436,1.274,437,1.274,438,1.274,439,1.274,440,1.274,441,1.274,442,1.274,443,1.45,444,1.45,445,1.45,446,1.274,447,1.274,448,1.274,449,1.274,450,1.274,451,1.274,452,1.036,453,1.036,454,2.684,455,1.274,456,1.274,457,3.729,458,3.447,459,2.182,460,1.274,461,2.377,462,1.274,463,1.274,464,1.274,465,1.709,466,2.103,467,2.103,468,1.274,469,1.274,470,1.274,471,2.802,472,1.036,473,3.447,474,1.036,475,1.036,476,1.274,477,1.274,478,1.274,479,1.274,480,1.274,481,0.879,482,2.684,483,3.115,484,1.274,485,0.879,486,1.709,487,1.45,488,2.182,489,1.274,490,1.274,491,4.747,492,3.924,493,1.274,494,3.19,495,3.924,496,2.684,497,1.274,498,1.274,499,1.274,500,1.274,501,1.274,502,1.274,503,1.274,504,4.49,505,2.684,506,2.684,507,2.103,508,2.103,509,2.103,510,1.274,511,1.274,512,2.684,513,1.274,514,1.274,515,3.115,516,2.532,517,2.103,518,2.103,519,2.103,520,4.102,521,2.103,522,2.103,523,2.103,524,2.103,525,2.103,526,3.115,527,2.103,528,2.103,529,2.103,530,2.103,531,2.103,532,2.103,533,2.103]],["title/components/TodoComponent.html",[0,0.07,86,0.478]],["body/components/TodoComponent.html",[0,0.061,1,0.191,2,0.546,3,0.191,4,0.163,5,0.365,6,0.365,7,0.365,8,0.163,10,0.365,11,1.396,12,1.238,13,0.615,15,0.615,17,0.488,18,0.048,19,0.163,20,0.191,21,0.191,63,0.286,64,0.615,65,0.615,66,0.365,67,0.935,68,0.365,70,0.59,71,0.365,72,0.22,73,0.365,74,0.191,75,0.365,76,0.191,77,0.365,78,0.191,79,0.365,80,0.22,81,0.365,82,0.191,83,0.365,84,0.191,85,0.365,86,0.488,87,0.707,88,0.365,89,0.365,90,0.015,91,0.015,93,0.78,94,1.139,98,0.286,99,0.546,101,0.615,102,1.336,103,0.365,105,0.411,106,1.51,108,0.829,109,1.065,110,0.829,112,1.12,113,1.988,114,1.529,115,1.174,116,1.174,118,0.591,119,0.463,120,0.591,121,0.522,123,1.513,125,1.354,126,1.322,132,2.976,147,1.616,171,0.917,178,1.665,204,1.99,207,2.314,208,1.843,214,1.139,230,0.778,249,0.879,260,1.925,263,2.221,275,0.995,280,2.219,282,3.108,283,2.56,284,2.693,298,1.135,308,2.506,309,1.31,310,3.045,315,1.941,316,2.973,318,2.973,320,2.638,340,1.135,343,1.31,344,1.725,347,1.829,352,0.674,353,0.778,378,1.31,379,1.925,381,1.697,388,0.917,400,0.917,405,0.917,406,0.917,412,1.31,414,2.346,457,2.346,459,3.505,461,2.973,465,3.505,474,0.917,475,0.917,487,2.892,516,0.917,534,0.917,535,1.128,536,1.899,537,1.899,538,1.899,539,1.899,540,2.46,541,2.46,542,3.713,543,2.886,544,1.899,545,1.899,546,2.618,547,3.221,548,2.886,549,1.899,550,1.899,551,2.46,552,1.128,553,1.128,554,1.128,555,1.899,556,1.128,557,3.49,558,1.899,559,2.886,560,1.128,561,1.128,562,1.128,563,1.899,564,1.128,565,1.128,566,1.899,567,1.128,568,1.128,569,3.49,570,2.886,571,1.128,572,1.128,573,1.128,574,1.128,575,1.128,576,1.128,577,1.128,578,1.128,579,2.46,580,4.589,581,1.899,582,1.899,583,1.899,584,2.886,585,1.128,586,1.899,587,2.46,588,2,589,1.899,590,3.49,591,1.899,592,1.899,593,2.886,594,3.221,595,1.899,596,3.221,597,1.899,598,2.837,599,1.899,600,1.899,601,2.46,602,0.917,603,1.899,604,1.899,605,2.886,606,1.128,607,1.128,608,1.128,609,1.128,610,1.899,611,1.128,612,1.128,613,1.128,614,2.886,615,1.899,616,1.128,617,2.886,618,1.128,619,3.221,620,2.886,621,1.899,622,1.899,623,2,624,1.128,625,1.128,626,1.899,627,1.899,628,1.899,629,1.128,630,1.128,631,1.128,632,2.46,633,1.899,634,1.899,635,1.899,636,1.128,637,1.128,638,3.221,639,1.899,640,1.128,641,1.128,642,1.128,643,1.899,644,1.899,645,1.899,646,1.899,647,1.899,648,1.899,649,1.899]],["title/injectables/TodoService.html",[147,1.308,188,1.16]],["body/injectables/TodoService.html",[3,0.555,4,0.474,8,0.474,17,0.841,18,0.047,19,0.474,20,0.555,21,0.555,52,1.72,70,0.717,90,0.034,91,0.034,95,1.961,98,0.833,99,1.219,101,1.375,103,1.063,106,1.611,108,1.219,109,1.194,110,1.219,112,1.219,114,1.197,115,1.197,116,1.197,121,1.519,147,1.965,161,2.263,188,1.742,190,1.961,193,2.668,194,4.043,196,3.45,200,4.187,201,1.961,202,2.263,208,1.197,214,1.965,237,2.263,283,3.43,289,2.442,546,4.043,650,2.668,651,4.704,652,4.244,653,3.282,654,3.282,655,4.244,656,3.282,657,4.244,658,4.244,659,4.244,660,3.282,661,3.282,662,4.244,663,3.282,664,3.282,665,3.282,666,3.282,667,3.282,668,3.282,669,3.282,670,3.282,671,2.668]],["title/injectables/UserService.html",[105,1.031,188,1.16]],["body/injectables/UserService.html",[3,0.424,4,0.363,8,0.363,17,0.599,18,0.047,19,0.363,20,0.424,21,0.424,47,1.316,52,1.856,70,0.693,90,0.029,91,0.029,95,1.501,98,0.638,99,1.017,101,1.147,103,1.329,105,1.292,106,1.657,108,1.179,109,1.042,110,1.179,112,1.35,113,2.1,114,1.897,115,1.292,116,1.778,123,1.316,124,1.64,125,1.625,126,2.001,127,1.316,129,1.64,178,1.929,188,1.454,190,1.501,199,2.555,201,1.501,202,1.732,214,1.64,226,1.316,239,1.501,248,1.501,249,1.64,254,1.856,264,3.335,274,1.501,288,1.501,289,1.899,302,2.443,303,2.443,305,2.443,307,2.879,315,1.163,332,3.335,333,3.622,342,2.042,347,1.316,350,2.879,352,1.501,353,1.732,359,2.042,378,2.443,379,2.663,381,2.443,452,2.042,453,2.042,494,2.042,598,3.622,602,2.042,623,2.042,672,2.042,673,4.103,674,4.456,675,3.542,676,3.542,677,3.542,678,2.512,679,3.542,680,2.512,681,3.542,682,2.512,683,2.512,684,3.542,685,2.512,686,2.512,687,3.542,688,3.542,689,2.512,690,2.512,691,2.512,692,2.512,693,2.512,694,3.542,695,2.512,696,2.512,697,2.512,698,2.512,699,2.512,700,2.512,701,3.542,702,2.512,703,2.512,704,2.512,705,2.512,706,3.542,707,2.512,708,2.512]],["title/coverage.html",[709,3.125]],["body/coverage.html",[0,0.137,1,0.579,8,0.495,9,2.786,18,0.047,52,1.796,72,0.669,74,0.579,76,0.579,78,0.579,80,0.669,82,0.579,84,0.579,86,0.579,90,0.035,91,0.035,92,2.786,105,1.249,109,0.87,147,1.586,188,1.971,189,2.363,191,2.786,219,2.786,233,2.786,257,2.786,328,2.786,360,2.786,416,3.68,443,2.363,444,2.363,445,2.363,471,4.243,481,2.363,485,2.363,534,2.786,588,4.663,650,2.786,672,2.786,709,2.786,710,3.427,711,3.427,712,3.427,713,5.49,714,3.427,715,3.427,716,3.427,717,4.364,718,3.427,719,3.427,720,3.427,721,3.427,722,3.427,723,3.427,724,3.427]],["title/dependencies.html",[136,2.029,725,1.632]],["body/dependencies.html",[18,0.047,19,0.587,90,0.039,91,0.039,119,1.668,136,2.428,138,2.802,154,3.94,155,3.343,157,1.881,201,2.428,726,4.064,727,5.667,728,4.064,729,4.064,730,4.064,731,4.064,732,4.064,733,4.064,734,4.064,735,4.064,736,4.064]],["title/miscellaneous/functions.html",[737,1.924,738,2.76]],["body/miscellaneous/functions.html",[18,0.045,70,0.81,90,0.039,91,0.039,98,1.013,108,1.377,109,1.013,110,1.377,112,1.377,416,2.752,434,3.898,443,3.545,444,3.545,445,3.545,472,3.244,481,3.307,485,3.307,486,3.244,487,3.678,488,3.898,737,3.244,738,3.244,739,5.455,740,3.991,741,3.991]],["title/index.html",[98,0.601,742,2.367,743,2.367]],["body/index.html",[0,0.12,4,0.505,18,0.036,23,2.842,24,2.842,30,3.94,52,1.832,61,2.089,70,0.591,90,0.036,91,0.036,93,1.435,671,3.593,725,2.411,744,3.496,745,4.42,746,3.496,747,4.846,748,4.846,749,2.842,750,3.496,751,3.496,752,5.252,753,5.447,754,3.496,755,3.496,756,3.496,757,3.496,758,3.496,759,3.496,760,3.496,761,3.496,762,3.496,763,3.496,764,4.846,765,4.846,766,3.496,767,5.092,768,3.496,769,3.496,770,3.496,771,3.496,772,4.42,773,4.42,774,5.092,775,3.496,776,4.42,777,4.42,778,3.496,779,5.364,780,3.496,781,3.496,782,3.496,783,4.42,784,3.496,785,3.496,786,3.496,787,3.496,788,3.496,789,3.496,790,3.496,791,3.496,792,2.411,793,3.496,794,3.496]],["title/modules.html",[135,2.014]],["body/modules.html",[18,0.041,90,0.041,91,0.041,134,2.635,135,2.311,146,2.311,155,3.041,795,4.41,796,4.41,797,5.086,798,4.41,799,4.41]],["title/overview.html",[792,2.651]],["body/overview.html",[1,0.822,2,1.011,18,0.046,61,2.103,63,0.894,72,1.065,74,0.822,76,0.822,78,0.822,80,0.949,82,0.822,84,0.822,86,0.822,90,0.036,91,0.036,133,2.103,134,3.491,135,1.845,136,2.103,137,2.861,138,2.427,139,2.861,140,2.427,141,2.861,142,2.861,143,2.861,144,2.861,145,2.861,146,2.548,147,2.25,148,3.608,149,2.861,177,2.103,190,2.103,461,2.427,792,2.427,800,3.52,801,3.52,802,3.52]],["title/properties.html",[99,0.975,725,1.632]],["body/properties.html",[18,0.043,90,0.041,91,0.041,99,1.289,749,3.647,803,4.487]],["title/routes.html",[177,2.297]],["body/routes.html",[18,0.042,90,0.042,91,0.042,177,2.705]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":588,"title":{},"body":{"components/TodoComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":803,"title":{},"body":{"properties.html":{}}}],["0.14.10",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":623,"title":{},"body":{"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["1.amazonaws.com/tareas.json",{"_index":659,"title":{},"body":{"injectables/TodoService.html":{}}}],["1000",{"_index":319,"title":{},"body":{"components/LoginComponent.html":{}}}],["13",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["18.2.0",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":750,"title":{},"body":{"index.html":{}}}],["2",{"_index":800,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["2/15",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["2023",{"_index":250,"title":{},"body":{"components/HomeComponent.html":{}}}],["3",{"_index":461,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"overview.html":{}}}],["3000",{"_index":459,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["5",{"_index":317,"title":{},"body":{"components/LoginComponent.html":{}}}],["5.3.3",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6",{"_index":527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["7.8.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":802,"title":{},"body":{"overview.html":{}}}],["9",{"_index":801,"title":{},"body":{"overview.html":{}}}],["_]/.test(value",{"_index":513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_tasks",{"_index":601,"title":{},"body":{"components/TodoComponent.html":{}}}],["about'},{'name",{"_index":71,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["about.component.css",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{}}}],["about/about.component",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["abstractcontrol",{"_index":427,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accessors",{"_index":550,"title":{},"body":{"components/TodoComponent.html":{}}}],["actual",{"_index":309,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["actual_component",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["actualiza",{"_index":694,"title":{},"body":{"injectables/UserService.html":{}}}],["actualizadas",{"_index":615,"title":{},"body":{"components/TodoComponent.html":{}}}],["actualizado",{"_index":405,"title":{},"body":{"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["actualizar",{"_index":352,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["add",{"_index":786,"title":{},"body":{"index.html":{}}}],["addtask",{"_index":543,"title":{},"body":{"components/TodoComponent.html":{}}}],["agregada",{"_index":616,"title":{},"body":{"components/TodoComponent.html":{}}}],["agregar",{"_index":605,"title":{},"body":{"components/TodoComponent.html":{}}}],["ahora",{"_index":532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["al",{"_index":457,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["alert('no",{"_index":700,"title":{},"body":{"injectables/UserService.html":{}}}],["alert('por",{"_index":297,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular",{"_index":747,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["angular/compiler",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"dependencies.html":{}}}],["antes",{"_index":462,"title":{},"body":{"components/RegisterComponent.html":{}}}],["api",{"_index":666,"title":{},"body":{"injectables/TodoService.html":{}}}],["aplicación",{"_index":357,"title":{},"body":{"components/NavbarComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["app.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":72,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["appmodule",{"_index":134,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":146,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":768,"title":{},"body":{"index.html":{}}}],["autenticado",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["authservice",{"_index":189,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["automatically",{"_index":758,"title":{},"body":{"index.html":{}}}],["available",{"_index":799,"title":{},"body":{"modules.html":{}}}],["aún",{"_index":477,"title":{},"body":{"components/RegisterComponent.html":{}}}],["basado",{"_index":695,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject",{"_index":690,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(false",{"_index":688,"title":{},"body":{"injectables/UserService.html":{}}}],["believe",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{}}}],["best",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{}}}],["bloquear",{"_index":407,"title":{},"body":{"components/ProfileComponent.html":{}}}],["boolean",{"_index":340,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["bootstrap",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bring",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{}}}],["browse",{"_index":797,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":767,"title":{},"body":{"index.html":{}}}],["cambia",{"_index":703,"title":{},"body":{"injectables/UserService.html":{}}}],["cambios",{"_index":400,"title":{},"body":{"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["campo",{"_index":474,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["campos",{"_index":300,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["capabilities",{"_index":788,"title":{},"body":{"index.html":{}}}],["caracter",{"_index":511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["caracteres",{"_index":495,"title":{},"body":{"components/RegisterComponent.html":{}}}],["carga",{"_index":563,"title":{},"body":{"components/TodoComponent.html":{}}}],["cargados",{"_index":592,"title":{},"body":{"components/TodoComponent.html":{}}}],["cargar",{"_index":596,"title":{},"body":{"components/TodoComponent.html":{}}}],["carácter",{"_index":529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["catcherror",{"_index":663,"title":{},"body":{"injectables/TodoService.html":{}}}],["cerrar",{"_index":359,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["change",{"_index":760,"title":{},"body":{"index.html":{}}}],["check",{"_index":791,"title":{},"body":{"index.html":{}}}],["checkloginstatus",{"_index":674,"title":{},"body":{"injectables/UserService.html":{}}}],["choice",{"_index":782,"title":{},"body":{"index.html":{}}}],["ciertos",{"_index":469,"title":{},"body":{"components/RegisterComponent.html":{}}}],["class",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":748,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":762,"title":{},"body":{"index.html":{}}}],["coinciden",{"_index":411,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["command",{"_index":783,"title":{},"body":{"index.html":{}}}],["committed",{"_index":45,"title":{},"body":{"components/AboutComponent.html":{}}}],["como",{"_index":632,"title":{},"body":{"components/TodoComponent.html":{}}}],["completa",{"_index":299,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["completada",{"_index":633,"title":{},"body":{"components/TodoComponent.html":{}}}],["completadas",{"_index":647,"title":{},"body":{"components/TodoComponent.html":{}}}],["completed",{"_index":569,"title":{},"body":{"components/TodoComponent.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["componente",{"_index":536,"title":{},"body":{"components/TodoComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"overview.html":{}}}],["con",{"_index":239,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["confirmación",{"_index":530,"title":{},"body":{"components/RegisterComponent.html":{}}}],["confirmar",{"_index":415,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["confirmpassword",{"_index":387,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["consola",{"_index":593,"title":{},"body":{"components/TodoComponent.html":{}}}],["console.error('an",{"_index":668,"title":{},"body":{"injectables/TodoService.html":{}}}],["console.error('error",{"_index":595,"title":{},"body":{"components/TodoComponent.html":{}}}],["console.log('datos",{"_index":591,"title":{},"body":{"components/TodoComponent.html":{}}}],["console.log(`enlace",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["constructor(fb",{"_index":267,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["constructor(private",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{}}}],["constructor(router",{"_index":335,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(todoservice",{"_index":552,"title":{},"body":{"components/TodoComponent.html":{}}}],["constructor(userservice",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["contact",{"_index":55,"title":{},"body":{"components/AboutComponent.html":{}}}],["contar",{"_index":496,"title":{},"body":{"components/RegisterComponent.html":{}}}],["contener",{"_index":520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["contenga",{"_index":503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["contenido",{"_index":579,"title":{},"body":{"components/TodoComponent.html":{}}}],["content",{"_index":582,"title":{},"body":{"components/TodoComponent.html":{}}}],["contraseña",{"_index":226,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["contraseñas",{"_index":410,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["control",{"_index":242,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{}}}],["control.value",{"_index":473,"title":{},"body":{"components/RegisterComponent.html":{}}}],["controla",{"_index":374,"title":{},"body":{"components/ProfileComponent.html":{}}}],["correctamente",{"_index":413,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["correo",{"_index":227,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["coverage",{"_index":709,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creating",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{}}}],["credenciales",{"_index":285,"title":{},"body":{"components/LoginComponent.html":{}}}],["currentuser",{"_index":598,"title":{},"body":{"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["currentuseremail",{"_index":380,"title":{},"body":{"components/ProfileComponent.html":{}}}],["d/.test(value",{"_index":498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["data",{"_index":590,"title":{},"body":{"components/TodoComponent.html":{}}}],["date.now",{"_index":609,"title":{},"body":{"components/TodoComponent.html":{}}}],["datos",{"_index":378,"title":{},"body":{"components/ProfileComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["de",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{}}}],["debe",{"_index":491,"title":{},"body":{"components/RegisterComponent.html":{}}}],["declarations",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["defined",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["del",{"_index":379,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["deletetask",{"_index":544,"title":{},"body":{"components/TodoComponent.html":{}}}],["deletetask(taskid",{"_index":555,"title":{},"body":{"components/TodoComponent.html":{}}}],["dependencies",{"_index":136,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derechos",{"_index":255,"title":{},"body":{"components/HomeComponent.html":{}}}],["desaparece",{"_index":465,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["description",{"_index":535,"title":{},"body":{"components/TodoComponent.html":{}}}],["desde",{"_index":343,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["deshabilitar",{"_index":409,"title":{},"body":{"components/ProfileComponent.html":{}}}],["designed",{"_index":37,"title":{},"body":{"components/AboutComponent.html":{}}}],["designers",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{}}}],["después",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["dev",{"_index":755,"title":{},"body":{"index.html":{}}}],["developers",{"_index":43,"title":{},"body":{"components/AboutComponent.html":{}}}],["development",{"_index":751,"title":{},"body":{"index.html":{}}}],["directive",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["directives",{"_index":88,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":766,"title":{},"body":{"index.html":{}}}],["directory",{"_index":771,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":386,"title":{},"body":{"components/ProfileComponent.html":{}}}],["dist",{"_index":770,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["domain",{"_index":478,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dominio",{"_index":524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dominios",{"_index":470,"title":{},"body":{"components/RegisterComponent.html":{}}}],["dynamic",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":780,"title":{},"body":{"index.html":{}}}],["easier",{"_index":40,"title":{},"body":{"components/AboutComponent.html":{}}}],["east",{"_index":658,"title":{},"body":{"injectables/TodoService.html":{}}}],["edición",{"_index":377,"title":{},"body":{"components/ProfileComponent.html":{}}}],["editada",{"_index":641,"title":{},"body":{"components/TodoComponent.html":{}}}],["editar",{"_index":414,"title":{},"body":{"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["editing",{"_index":583,"title":{},"body":{"components/TodoComponent.html":{}}}],["edittask",{"_index":545,"title":{},"body":{"components/TodoComponent.html":{}}}],["edittask(taskid",{"_index":558,"title":{},"body":{"components/TodoComponent.html":{}}}],["efficiency",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{}}}],["el",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["electrónico",{"_index":228,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["element",{"_index":65,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["eliminada",{"_index":625,"title":{},"body":{"components/TodoComponent.html":{}}}],["eliminar",{"_index":619,"title":{},"body":{"components/TodoComponent.html":{}}}],["email",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["email.split('@')[1",{"_index":479,"title":{},"body":{"components/RegisterComponent.html":{}}}],["en",{"_index":347,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["encontrar",{"_index":628,"title":{},"body":{"components/TodoComponent.html":{}}}],["end",{"_index":779,"title":{},"body":{"index.html":{}}}],["enlace",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{}}}],["entre",{"_index":493,"title":{},"body":{"components/RegisterComponent.html":{}}}],["enviado",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["enviar",{"_index":232,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["error",{"_index":283,"title":{},"body":{"components/LoginComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{}}}],["error(error.message",{"_index":670,"title":{},"body":{"injectables/TodoService.html":{}}}],["errores",{"_index":597,"title":{},"body":{"components/TodoComponent.html":{}}}],["errormessage",{"_index":260,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["es",{"_index":325,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["espacios",{"_index":522,"title":{},"body":{"components/RegisterComponent.html":{}}}],["especial",{"_index":512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["esperar",{"_index":460,"title":{},"body":{"components/RegisterComponent.html":{}}}],["est",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["estado",{"_index":353,"title":{},"body":{"components/NavbarComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["estar",{"_index":618,"title":{},"body":{"components/TodoComponent.html":{}}}],["este",{"_index":523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["execute",{"_index":776,"title":{},"body":{"index.html":{}}}],["existe",{"_index":346,"title":{},"body":{"components/NavbarComponent.html":{}}}],["exitosa",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["exitosamente",{"_index":617,"title":{},"body":{"components/TodoComponent.html":{}}}],["exitoso",{"_index":312,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["experience",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{}}}],["export",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":275,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["favor",{"_index":298,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["fb",{"_index":269,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["features",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{}}}],["feedback",{"_index":57,"title":{},"body":{"components/AboutComponent.html":{}}}],["feel",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":761,"title":{},"body":{"index.html":{}}}],["filter",{"_index":540,"title":{},"body":{"components/TodoComponent.html":{}}}],["filteredtasks",{"_index":551,"title":{},"body":{"components/TodoComponent.html":{}}}],["filtrar",{"_index":642,"title":{},"body":{"components/TodoComponent.html":{}}}],["first",{"_index":785,"title":{},"body":{"index.html":{}}}],["forbiddendomains",{"_index":740,"title":{},"body":{"miscellaneous/functions.html":{}}}],["forbiddendomains.includes(domain",{"_index":480,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forbiddenemaildomain",{"_index":481,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["forbiddenemaildomain(['forbidden.com",{"_index":441,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forbiddenemaildomain(forbiddendomains",{"_index":472,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["forgot",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["forgotpassword",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{}}}],["forgotpassword'},{'name",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["forgotpassword(email",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword.component.css",{"_index":221,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword.component.html",{"_index":220,"title":{},"body":{"components/ForgotpasswordComponent.html":{}}}],["forgotpassword/forgotpassword.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["forgotpasswordcomponent",{"_index":74,"title":{"components/ForgotpasswordComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":429,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.get('confirmpassword')?.value",{"_index":448,"title":{},"body":{"components/RegisterComponent.html":{}}}],["form.get('password')?.value",{"_index":447,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":222,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":223,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["formulario",{"_index":375,"title":{},"body":{"components/ProfileComponent.html":{}}}],["free",{"_index":59,"title":{},"body":{"components/AboutComponent.html":{}}}],["fue",{"_index":245,"title":{},"body":{"components/HomeComponent.html":{}}}],["function",{"_index":471,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["functions",{"_index":738,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":789,"title":{},"body":{"index.html":{}}}],["fácil",{"_index":247,"title":{},"body":{"components/HomeComponent.html":{}}}],["generate",{"_index":764,"title":{},"body":{"index.html":{}}}],["generated",{"_index":746,"title":{},"body":{"index.html":{}}}],["gestionar",{"_index":537,"title":{},"body":{"components/TodoComponent.html":{}}}],["gestión",{"_index":645,"title":{},"body":{"components/TodoComponent.html":{}}}],["getfilteredtasks",{"_index":576,"title":{},"body":{"components/TodoComponent.html":{}}}],["gettasks",{"_index":546,"title":{},"body":{"components/TodoComponent.html":{},"injectables/TodoService.html":{}}}],["getting",{"_index":742,"title":{"index.html":{}},"body":{}}],["getuserdata",{"_index":675,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserdata(email",{"_index":679,"title":{},"body":{"injectables/UserService.html":{}}}],["go",{"_index":790,"title":{},"body":{"index.html":{}}}],["graph",{"_index":798,"title":{},"body":{"modules.html":{}}}],["group",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{}}}],["guardadas",{"_index":603,"title":{},"body":{"components/TodoComponent.html":{}}}],["guardar",{"_index":308,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["habilitar",{"_index":389,"title":{},"body":{"components/ProfileComponent.html":{}}}],["handleerror",{"_index":652,"title":{},"body":{"injectables/TodoService.html":{}}}],["handleerror(error",{"_index":655,"title":{},"body":{"injectables/TodoService.html":{}}}],["haslowercase",{"_index":509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hasnumber",{"_index":499,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hasnumbervalidator",{"_index":443,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hasspecialcharacter",{"_index":514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hasspecialcharactervalidator",{"_index":445,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hasupperandlowercase",{"_index":510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hasupperandlowercasevalidator",{"_index":444,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hasuppercase",{"_index":507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hay",{"_index":602,"title":{},"body":{"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["help",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["home",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":77,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["home.component.css",{"_index":235,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":234,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":76,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["http",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["http://localhost:4200",{"_index":757,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["httpheaders",{"_index":661,"title":{},"body":{"injectables/TodoService.html":{}}}],["https://mibuckectsum3.s3.us",{"_index":657,"title":{},"body":{"injectables/TodoService.html":{}}}],["id",{"_index":581,"title":{},"body":{"components/TodoComponent.html":{}}}],["identifier",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"index.html":{}}}],["import",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["improvements",{"_index":54,"title":{},"body":{"components/AboutComponent.html":{}}}],["incorrectos",{"_index":321,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":98,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["información",{"_index":403,"title":{},"body":{"components/ProfileComponent.html":{}}}],["inicializar",{"_index":383,"title":{},"body":{"components/ProfileComponent.html":{}}}],["iniciar",{"_index":248,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["inicie",{"_index":604,"title":{},"body":{"components/TodoComponent.html":{}}}],["inicio",{"_index":311,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["injectable",{"_index":188,"title":{"injectables/AuthService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inválido",{"_index":229,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["isediting",{"_index":363,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isloggedin",{"_index":332,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["isloggedinsubject",{"_index":673,"title":{},"body":{"injectables/UserService.html":{}}}],["json.parse",{"_index":599,"title":{},"body":{"components/TodoComponent.html":{}}}],["json.parse(localstorage.getitem('users",{"_index":303,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["json.stringify(this.tasks",{"_index":630,"title":{},"body":{"components/TodoComponent.html":{}}}],["json.stringify(users",{"_index":453,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["jsonurl",{"_index":651,"title":{},"body":{"injectables/TodoService.html":{}}}],["karma",{"_index":778,"title":{},"body":{"index.html":{}}}],["key",{"_index":686,"title":{},"body":{"injectables/UserService.html":{}}}],["la",{"_index":315,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["las",{"_index":284,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["learn",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["legend",{"_index":63,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"overview.html":{}}}],["letra",{"_index":500,"title":{},"body":{"components/RegisterComponent.html":{}}}],["letras",{"_index":521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["life",{"_index":39,"title":{},"body":{"components/AboutComponent.html":{}}}],["limpiar",{"_index":612,"title":{},"body":{"components/TodoComponent.html":{}}}],["list",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/HomeComponent.html":{}}}],["lista",{"_index":584,"title":{},"body":{"components/TodoComponent.html":{}}}],["literal",{"_index":574,"title":{},"body":{"components/TodoComponent.html":{}}}],["llevar",{"_index":241,"title":{},"body":{"components/HomeComponent.html":{}}}],["loadtasks",{"_index":547,"title":{},"body":{"components/TodoComponent.html":{}}}],["localstorage",{"_index":344,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["localstorage.getitem('currentuser",{"_index":381,"title":{},"body":{"components/ProfileComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('user",{"_index":341,"title":{},"body":{"components/NavbarComponent.html":{}}}],["localstorage.getitem(currentuser",{"_index":600,"title":{},"body":{"components/TodoComponent.html":{}}}],["localstorage.removeitem('currentuser",{"_index":698,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('currentuser",{"_index":307,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('users",{"_index":452,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(currentuser",{"_index":629,"title":{},"body":{"components/TodoComponent.html":{}}}],["logeado",{"_index":692,"title":{},"body":{"injectables/UserService.html":{}}}],["login",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["login(username",{"_index":681,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.css",{"_index":259,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":258,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":78,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfailed",{"_index":261,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform",{"_index":262,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":333,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["logueado",{"_index":350,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["los",{"_index":254,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["make",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{}}}],["marcada",{"_index":639,"title":{},"body":{"components/TodoComponent.html":{}}}],["marcar",{"_index":631,"title":{},"body":{"components/TodoComponent.html":{}}}],["matching",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maxlength",{"_index":488,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["mayuscula",{"_index":501,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mayúscula",{"_index":505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["menos",{"_index":504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mensaje",{"_index":282,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["message",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["methods",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["mi",{"_index":356,"title":{},"body":{"components/NavbarComponent.html":{}}}],["minlength",{"_index":486,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["minuscula",{"_index":502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["minúscula",{"_index":506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mis",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":737,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mission",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{}}}],["modo",{"_index":376,"title":{},"body":{"components/ProfileComponent.html":{}}}],["module",{"_index":133,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":135,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["molina",{"_index":252,"title":{},"body":{"components/HomeComponent.html":{}}}],["more",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"index.html":{}}}],["mostrar",{"_index":281,"title":{},"body":{"components/LoginComponent.html":{}}}],["más",{"_index":517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["método",{"_index":388,"title":{},"body":{"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["name",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navbar",{"_index":329,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["navbar.component.css",{"_index":331,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":330,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":80,"title":{"components/NavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":756,"title":{},"body":{"index.html":{}}}],["need",{"_index":784,"title":{},"body":{"index.html":{}}}],["new",{"_index":52,"title":{},"body":{"components/AboutComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newcontent",{"_index":559,"title":{},"body":{"components/TodoComponent.html":{}}}],["newtask",{"_index":608,"title":{},"body":{"components/TodoComponent.html":{}}}],["ng",{"_index":753,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["nombre",{"_index":288,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["notes",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["notesapp",{"_index":744,"title":{},"body":{"index.html":{}}}],["nuestra",{"_index":240,"title":{},"body":{"components/HomeComponent.html":{}}}],["nueva",{"_index":606,"title":{},"body":{"components/TodoComponent.html":{}}}],["nuevo",{"_index":705,"title":{},"body":{"injectables/UserService.html":{}}}],["null",{"_index":274,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":487,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"miscellaneous/functions.html":{}}}],["numero",{"_index":497,"title":{},"body":{"components/RegisterComponent.html":{}}}],["nunca",{"_index":244,"title":{},"body":{"components/HomeComponent.html":{}}}],["número",{"_index":528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["o",{"_index":230,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/TodoComponent.html":{}}}],["obligatoria",{"_index":526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["obligatorio",{"_index":515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observable",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{}}}],["obtener",{"_index":342,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UserService.html":{}}}],["occurred",{"_index":669,"title":{},"body":{"injectables/TodoService.html":{}}}],["octavio",{"_index":251,"title":{},"body":{"components/HomeComponent.html":{}}}],["olvidaste",{"_index":327,"title":{},"body":{"components/LoginComponent.html":{}}}],["onforgotpassword",{"_index":265,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["onlogin",{"_index":266,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":334,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onsubmit",{"_index":421,"title":{},"body":{"components/RegisterComponent.html":{}}}],["opciones",{"_index":578,"title":{},"body":{"components/TodoComponent.html":{}}}],["optional",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["organiza",{"_index":236,"title":{},"body":{"components/HomeComponent.html":{}}}],["organized",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{}}}],["out",{"_index":61,"title":{},"body":{"components/AboutComponent.html":{},"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":792,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":725,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":794,"title":{},"body":{"index.html":{}}}],["para",{"_index":280,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["passionate",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{}}}],["password",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["passwordlength",{"_index":490,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordlengthvalidator",{"_index":485,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordlengthvalidator(minlength",{"_index":741,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator",{"_index":422,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordsmatchvalidator(form",{"_index":426,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordsmismatch",{"_index":430,"title":{},"body":{"components/RegisterComponent.html":{}}}],["path",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pendiente",{"_index":634,"title":{},"body":{"components/TodoComponent.html":{}}}],["pendientes",{"_index":648,"title":{},"body":{"components/TodoComponent.html":{}}}],["pending",{"_index":570,"title":{},"body":{"components/TodoComponent.html":{}}}],["perfil",{"_index":358,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["permitido",{"_index":525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["personalizado",{"_index":467,"title":{},"body":{"components/RegisterComponent.html":{}}}],["platform",{"_index":781,"title":{},"body":{"index.html":{}}}],["por",{"_index":412,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["presencia",{"_index":696,"title":{},"body":{"injectables/UserService.html":{}}}],["principal",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["private",{"_index":289,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["productive",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{}}}],["profile",{"_index":184,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["profile.component.css",{"_index":362,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":361,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profilecomponent",{"_index":82,"title":{"components/ProfileComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profileform",{"_index":364,"title":{},"body":{"components/ProfileComponent.html":{}}}],["prohibir",{"_index":468,"title":{},"body":{"components/RegisterComponent.html":{}}}],["project",{"_index":745,"title":{},"body":{"index.html":{}}}],["properties",{"_index":99,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":27,"title":{},"body":{"components/AboutComponent.html":{}}}],["providedin",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["providehttpclient",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["providehttpclient(withinterceptorsfromdi",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pudo",{"_index":627,"title":{},"body":{"components/TodoComponent.html":{}}}],["puede",{"_index":516,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["puedes",{"_index":533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["página",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["que",{"_index":349,"title":{},"body":{"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["questions",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{}}}],["reach",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{}}}],["reactiveformsmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["recuperación",{"_index":323,"title":{},"body":{"components/LoginComponent.html":{}}}],["recuperar",{"_index":225,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["redirige",{"_index":322,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirigir",{"_index":314,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["reference",{"_index":793,"title":{},"body":{"index.html":{}}}],["register",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":85,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["register.component.css",{"_index":418,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":417,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/register.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":84,"title":{"components/RegisterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerform",{"_index":419,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrado",{"_index":464,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrar",{"_index":531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrarse",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["registrationsuccess",{"_index":420,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registro",{"_index":458,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reload",{"_index":759,"title":{},"body":{"index.html":{}}}],["requerida",{"_index":326,"title":{},"body":{"components/LoginComponent.html":{}}}],["requerido",{"_index":231,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{}}}],["reservados",{"_index":256,"title":{},"body":{"components/HomeComponent.html":{}}}],["reset",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respuesta",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["restablecimiento",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":90,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["retraso",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["router",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["routermodule",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":187,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":177,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":752,"title":{},"body":{"index.html":{}}}],["running",{"_index":772,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":664,"title":{},"body":{"injectables/TodoService.html":{}}}],["saveprofile",{"_index":365,"title":{},"body":{"components/ProfileComponent.html":{}}}],["savetasks",{"_index":548,"title":{},"body":{"components/TodoComponent.html":{}}}],["saveuserdata",{"_index":676,"title":{},"body":{"injectables/UserService.html":{}}}],["saveuserdata(key",{"_index":684,"title":{},"body":{"injectables/UserService.html":{}}}],["scaffolding",{"_index":763,"title":{},"body":{"index.html":{}}}],["se",{"_index":626,"title":{},"body":{"components/TodoComponent.html":{}}}],["segundos",{"_index":318,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["serve",{"_index":754,"title":{},"body":{"index.html":{}}}],["server",{"_index":671,"title":{},"body":{"injectables/TodoService.html":{},"index.html":{}}}],["services/todo.service",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/TodoComponent.html":{}}}],["services/user.service",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["sesión",{"_index":249,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["settimeout",{"_index":316,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["si",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["significa",{"_index":348,"title":{},"body":{"components/NavbarComponent.html":{}}}],["simplicity",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{}}}],["simular",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["solo",{"_index":519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["son",{"_index":286,"title":{},"body":{"components/LoginComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["src/.../register.component.ts",{"_index":739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/about/about.component.ts",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/forgotpassword/forgotpassword.component.ts",{"_index":219,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":233,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts",{"_index":257,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:11",{"_index":277,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:12",{"_index":276,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:13",{"_index":279,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:14",{"_index":278,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:15",{"_index":268,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":273,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":271,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":270,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:59",{"_index":272,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":328,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:13",{"_index":336,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:19",{"_index":338,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:29",{"_index":337,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:33",{"_index":339,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/profile/profile.component.ts",{"_index":360,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:11",{"_index":372,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:12",{"_index":371,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:13",{"_index":373,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:14",{"_index":367,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:18",{"_index":368,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:40",{"_index":370,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:56",{"_index":369,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/register/register.component.ts",{"_index":416,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/register/register.component.ts:12",{"_index":431,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:14",{"_index":432,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:15",{"_index":423,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:19",{"_index":424,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:57",{"_index":428,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:64",{"_index":425,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:8",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/todo.service.ts",{"_index":650,"title":{},"body":{"injectables/TodoService.html":{},"coverage.html":{}}}],["src/app/services/todo.service.ts:10",{"_index":660,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:11",{"_index":653,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:15",{"_index":654,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/todo.service.ts:19",{"_index":656,"title":{},"body":{"injectables/TodoService.html":{}}}],["src/app/services/user.service.ts",{"_index":672,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:16",{"_index":678,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":682,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:28",{"_index":683,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:33",{"_index":685,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:55",{"_index":680,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:8",{"_index":689,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:9",{"_index":677,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/todo/todo.component.ts",{"_index":534,"title":{},"body":{"components/TodoComponent.html":{},"coverage.html":{}}}],["src/app/todo/todo.component.ts:116",{"_index":556,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:129",{"_index":565,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:141",{"_index":567,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:155",{"_index":560,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:16",{"_index":572,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:169",{"_index":577,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:17",{"_index":568,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:18",{"_index":571,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:19",{"_index":573,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:20",{"_index":575,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:25",{"_index":553,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:31",{"_index":564,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:38",{"_index":561,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:69",{"_index":562,"title":{},"body":{"components/TodoComponent.html":{}}}],["src/app/todo/todo.component.ts:96",{"_index":554,"title":{},"body":{"components/TodoComponent.html":{}}}],["started",{"_index":743,"title":{"index.html":{}},"body":{}}],["statements",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{}}}],["stored",{"_index":769,"title":{},"body":{"index.html":{}}}],["string",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["su",{"_index":390,"title":{},"body":{"components/ProfileComponent.html":{}}}],["success",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["successmessage",{"_index":263,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["support",{"_index":795,"title":{},"body":{"modules.html":{}}}],["support&#64;todolistapp.com",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{}}}],["support@todolistapp.com",{"_index":69,"title":{},"body":{"components/AboutComponent.html":{}}}],["svg",{"_index":796,"title":{},"body":{"modules.html":{}}}],["t.id",{"_index":637,"title":{},"body":{"components/TodoComponent.html":{}}}],["table",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":484,"title":{},"body":{"components/RegisterComponent.html":{}}}],["tan",{"_index":246,"title":{},"body":{"components/HomeComponent.html":{}}}],["tarea",{"_index":580,"title":{},"body":{"components/TodoComponent.html":{}}}],["tareas",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/TodoComponent.html":{}}}],["task",{"_index":635,"title":{},"body":{"components/TodoComponent.html":{}}}],["task.completed",{"_index":638,"title":{},"body":{"components/TodoComponent.html":{}}}],["task.content",{"_index":649,"title":{},"body":{"components/TodoComponent.html":{}}}],["task.id",{"_index":622,"title":{},"body":{"components/TodoComponent.html":{}}}],["taskcontent",{"_index":541,"title":{},"body":{"components/TodoComponent.html":{}}}],["taskid",{"_index":557,"title":{},"body":{"components/TodoComponent.html":{}}}],["taskindex",{"_index":620,"title":{},"body":{"components/TodoComponent.html":{}}}],["tasks",{"_index":542,"title":{},"body":{"components/TodoComponent.html":{}}}],["team",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["templateurl",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["tener",{"_index":492,"title":{},"body":{"components/RegisterComponent.html":{}}}],["test",{"_index":775,"title":{},"body":{"index.html":{}}}],["test.com",{"_index":442,"title":{},"body":{"components/RegisterComponent.html":{}}}],["testing",{"_index":787,"title":{},"body":{"index.html":{}}}],["tests",{"_index":774,"title":{},"body":{"index.html":{}}}],["texto",{"_index":613,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.checkloginstatus",{"_index":691,"title":{},"body":{"injectables/UserService.html":{}}}],["this.errormessage",{"_index":320,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["this.fb.group",{"_index":292,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["this.filter",{"_index":643,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.gettasks",{"_index":586,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.http.get(this.jsonurl).pipe(catcherror(this.handleerror",{"_index":667,"title":{},"body":{"injectables/TodoService.html":{}}}],["this.isediting",{"_index":391,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.isloggedin",{"_index":345,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isloggedinsubject.asobservable",{"_index":687,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isloggedinsubject.next(!!currentuser",{"_index":693,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isloggedinsubject.next(false",{"_index":699,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isloggedinsubject.next(true",{"_index":697,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loadtasks",{"_index":585,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.loginform",{"_index":291,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":296,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value",{"_index":301,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.passwordsmatchvalidator",{"_index":446,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.profileform",{"_index":384,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('confirmpassword')?.disable",{"_index":399,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('confirmpassword')?.enable",{"_index":395,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('email')?.disable",{"_index":397,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('email')?.enable",{"_index":393,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('name')?.disable",{"_index":396,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('name')?.enable",{"_index":392,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('password')?.disable",{"_index":398,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.get('password')?.enable",{"_index":394,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.valid",{"_index":401,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.profileform.value",{"_index":402,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.registerform",{"_index":435,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.reset",{"_index":455,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.valid",{"_index":449,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.value",{"_index":450,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationsuccess",{"_index":454,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/forgot",{"_index":324,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/home",{"_index":354,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/login",{"_index":456,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/todo",{"_index":313,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.savetasks",{"_index":614,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.successmessage",{"_index":310,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["this.taskcontent",{"_index":610,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.taskcontent.trim",{"_index":607,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks",{"_index":594,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks.filter((task",{"_index":644,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks.find((t",{"_index":636,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks.findindex((task",{"_index":621,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks.length",{"_index":587,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks.push(newtask",{"_index":611,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks.splice(taskindex",{"_index":624,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.tasks[taskindex].content",{"_index":640,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.todoservice.gettasks().subscribe",{"_index":589,"title":{},"body":{"components/TodoComponent.html":{}}}],["this.toggleedit",{"_index":408,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.checkloginstatus",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.userservice.getuserdata(currentuseremail",{"_index":382,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.isloggedin$.subscribe(isloggedin",{"_index":351,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.login(this.username",{"_index":290,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout",{"_index":355,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.saveuserdata('email",{"_index":404,"title":{},"body":{"components/ProfileComponent.html":{}}}],["throwerror",{"_index":662,"title":{},"body":{"injectables/TodoService.html":{}}}],["tirelessly",{"_index":50,"title":{},"body":{"components/AboutComponent.html":{}}}],["title",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["todas",{"_index":646,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["todo.component.css",{"_index":539,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo.component.html",{"_index":538,"title":{},"body":{"components/TodoComponent.html":{}}}],["todo/todo.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["todocomponent",{"_index":86,"title":{"components/TodoComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"coverage.html":{},"overview.html":{}}}],["todos",{"_index":253,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["todoservice",{"_index":147,"title":{"injectables/TodoService.html":{}},"body":{"modules/AppModule.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"coverage.html":{},"overview.html":{}}}],["toggleedit",{"_index":366,"title":{},"body":{"components/ProfileComponent.html":{}}}],["toggletaskcompletion",{"_index":549,"title":{},"body":{"components/TodoComponent.html":{}}}],["toggletaskcompletion(taskid",{"_index":566,"title":{},"body":{"components/TodoComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["true",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["tslib",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":237,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/TodoService.html":{}}}],["tus",{"_index":243,"title":{},"body":{"components/HomeComponent.html":{}}}],["type",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["un",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["una",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["unit",{"_index":773,"title":{},"body":{"index.html":{}}}],["url",{"_index":665,"title":{},"body":{"injectables/TodoService.html":{}}}],["usas",{"_index":704,"title":{},"body":{"injectables/UserService.html":{}}}],["use",{"_index":765,"title":{},"body":{"index.html":{}}}],["user",{"_index":47,"title":{},"body":{"components/AboutComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["user.email",{"_index":305,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["user.name",{"_index":385,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.password",{"_index":306,"title":{},"body":{"components/LoginComponent.html":{}}}],["userindex",{"_index":701,"title":{},"body":{"injectables/UserService.html":{}}}],["username",{"_index":264,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["users",{"_index":302,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["users.find",{"_index":304,"title":{},"body":{"components/LoginComponent.html":{}}}],["users.find((user",{"_index":708,"title":{},"body":{"injectables/UserService.html":{}}}],["users.findindex",{"_index":702,"title":{},"body":{"injectables/UserService.html":{}}}],["users.push",{"_index":451,"title":{},"body":{"components/RegisterComponent.html":{}}}],["users[userindex",{"_index":706,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":105,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usuario",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["vacío",{"_index":475,"title":{},"body":{"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["valida",{"_index":476,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validador",{"_index":466,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validadores",{"_index":483,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":433,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":434,"title":{},"body":{"components/RegisterComponent.html":{},"miscellaneous/functions.html":{}}}],["validators",{"_index":224,"title":{},"body":{"components/ForgotpasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":294,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.maxlength(50",{"_index":437,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":436,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":295,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern('^[a",{"_index":438,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required",{"_index":293,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/TodoService.html":{},"injectables/UserService.html":{}}}],["value.email",{"_index":707,"title":{},"body":{"injectables/UserService.html":{}}}],["value.length",{"_index":489,"title":{},"body":{"components/RegisterComponent.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ForgotpasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{}}}],["verificar",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["version",{"_index":749,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":777,"title":{},"body":{"index.html":{}}}],["vida",{"_index":238,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TodoComponent.html":{},"injectables/UserService.html":{}}}],["válidas",{"_index":287,"title":{},"body":{"components/LoginComponent.html":{}}}],["válido",{"_index":482,"title":{},"body":{"components/RegisterComponent.html":{}}}],["withinterceptorsfromdi",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["works",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{}}}],["xito",{"_index":406,"title":{},"body":{"components/ProfileComponent.html":{},"components/TodoComponent.html":{}}}],["y",{"_index":494,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["ya",{"_index":463,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z",{"_index":440,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z]/.test(value",{"_index":508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["za",{"_index":439,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/about/about.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n            \n                styleUrl\n                ./about.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrl: './about.component.css'\n})\nexport class AboutComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                About Us\n                Learn more about our application and team.\n            \n        \n        \n            \n                Our Mission\n                \n                    Our mission is to provide the best to-do list application to help you stay organized and productive.\n                    We believe in simplicity and efficiency, and our app is designed to make your life easier.\n                \n            \n            \n                Our Team\n                \n                    We are a group of passionate developers and designers committed to creating the best user\n                    experience.\n                    Our team works tirelessly to bring you new features and improvements.\n                \n            \n        \n        \n            \n                Contact Us\n                \n                    If you have any questions or feedback, feel free to reach out to us at\n                    support&#64;todolistapp.com.\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        About Us                Learn more about our application and team.                                                        Our Mission                                    Our mission is to provide the best to-do list application to help you stay organized and productive.                    We believe in simplicity and efficiency, and our app is designed to make your life easier.                                                        Our Team                                    We are a group of passionate developers and designers committed to creating the best user                    experience.                    Our team works tirelessly to bring you new features and improvements.                                                                        Contact Us                                    If you have any questions or feedback, feel free to reach out to us at                    support@todolistapp.com.                                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'notes-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent implements OnInit{\n  title = 'notes-app';\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n    this.userService.checkLoginStatus(); // Verificar si el usuario está autenticado\n  }\n\n  \n}\n\n    \n\n    \n        \n\n  \n    \n\n\n    \n  \n\n\n\n  To-Do App\n  \n    \n      \n        Login\n      \n      \n        Registrarse\n      \n      \n        Mis Tareas\n      \n    \n  \n\n\n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              To-Do App                    Login                    Registrarse                    Mis Tareas             -->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nForgotpasswordComponent\n\nForgotpasswordComponent\n\nAppModule -->\n\nForgotpasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nAppModule -->\n\nTodoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nAppModule -->\n\nTodoService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ForgotpasswordComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TodoComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            TodoService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport {\n  provideHttpClient,\n  withInterceptorsFromDi,\n} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\nimport { TodoService } from './services/todo.service';\nimport { AboutComponent } from './about/about.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    TodoComponent,\n    NavbarComponent,\n    ProfileComponent,\n    ForgotpasswordComponent,\n    AboutComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, FormsModule],\n  providers: [TodoService, provideHttpClient(withInterceptorsFromDi())],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\nimport { AboutComponent } from './about/about.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent }, // Página principal\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'todo', component: TodoComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'forgot-password', component: ForgotpasswordComponent },\n  { path: 'about', component: AboutComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  forgotPassword(email: string): Observable {\n    // Simular una respuesta exitosa después de un retraso\n    console.log(`Enlace de restablecimiento enviado a ${email}`);\n    return of({ success: true, message: 'Enlace de restablecimiento enviado' });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotpasswordComponent.html":{"url":"components/ForgotpasswordComponent.html","title":"component - ForgotpasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotpasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/forgotpassword/forgotpassword.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgotpassword\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./forgotpassword.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgotpassword.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrl: './forgotpassword.component.css',\n})\nexport class ForgotpasswordComponent {}\n\n    \n\n    \n        \n    Recuperar Contraseña\n    \n        \n            Correo Electrónico\n            \n            Correo inválido o requerido.\n        \n        \n            Enviar Enlace\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Recuperar Contraseña                        Correo Electrónico                        Correo inválido o requerido.                            Enviar Enlace            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotpasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n    \n      Organiza tu Vida\n      Con nuestra To-Do List, llevar el control de tus tareas nunca fue tan fácil.\n      \n        Iniciar Sesión\n        Registrarse\n      \n    \n  \n\n    © 2023 Octavio Molina. Todos los derechos reservados.\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Organiza tu Vida      Con nuestra To-Do List, llevar el control de tus tareas nunca fue tan fácil.              Iniciar Sesión        Registrarse                © 2023 Octavio Molina. Todos los derechos reservados.'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                loginFailed\n                            \n                            \n                                loginForm\n                            \n                            \n                                successMessage\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onForgotPassword\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onForgotPassword\n                        \n                    \n                \n            \n            \n                \nonForgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css',\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  loginFailed = false; // Para mostrar un mensaje de error si las credenciales no son válidas\n  username: string = ''; // Nombre de usuario\n  successMessage: string | null = null;\n  errorMessage: string | null = null;\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  onLogin(): void {\n    this.userService.login(this.username);\n    this.userService.checkLoginStatus();\n  }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n  login(): void {\n    if (this.loginForm.invalid) {\n      alert('Por favor, completa todos los campos.');\n      return;\n    }\n\n    const { email, password } = this.loginForm.value;\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n    // Verificar las credenciales\n    const user = users.find(\n      (user: any) => user.email === email && user.password === password\n    );\n\n    if (user) {\n      localStorage.setItem('currentUser', email); // Guardar el usuario actual\n      this.successMessage = 'Inicio de sesión exitoso';\n      // this.router.navigate(['/todo']); // Redirigir a la página de tareas\n      setTimeout(() => {\n        this.router.navigate(['/todo']); // Redirigir a la página de tareas después de 5 segundos\n      }, 1000);\n    } else {\n      this.errorMessage = 'Correo o contraseña incorrectos';\n    }\n  }\n\n  onForgotPassword(): void {\n    // Redirige a la página de recuperación de contraseña\n    this.router.navigate(['/forgot-password']);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ successMessage }}\n        \n      \n      \n        {{ errorMessage }}\n        \n      \n      \n        Inicio de Sesión\n        \n          \n          \n            Correo Electrónico\n            \n            \n              Correo inválido o requerido.\n            \n          \n\n          \n          \n            Contraseña\n            \n            \n              La contraseña es requerida.\n            \n          \n\n          \n          \n            \n              Iniciar Sesión\n            \n          \n        \n        \n        \n          \n            ¿Olvidaste tu contraseña?\n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ successMessage }}                            {{ errorMessage }}                            Inicio de Sesión                                        Correo Electrónico                                      Correo inválido o requerido.                                                      Contraseña                                      La contraseña es requerida.                                                                    Iniciar Sesión                                                                    ¿Olvidaste tu contraseña?                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/navbar/navbar.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/navbar/navbar.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent implements OnInit{\n\n  isLoggedIn: boolean = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService) {}\n\n  ngOnInit(): void {\n    /*const user = localStorage.getItem('user');  // Obtener el usuario desde el localStorage\n    if (user) {\n      this.isLoggedIn = true;  // Si el usuario existe en el localStorage, significa que está logueado\n    }*/\n    this.userService.isLoggedIn$.subscribe(isLoggedIn => {\n      this.isLoggedIn = isLoggedIn;\n    });\n  }\n\n  logout(): void {\n    this.isLoggedIn = false;  // Actualizar el estado de sesión\n    this.router.navigate(['/home']);  // Redirigir a la página de login\n  }\n  onLogout(): void {\n    this.userService.logout();\n    this.router.navigate(['/home']);  // Redirigir a la página de login\n\n  }\n\n}\n\n    \n\n    \n        \n  \n    Mi Aplicación\n    \n      \n    \n    \n      \n        \n          Inicio\n        \n        \n          About \n        \n        \n          Perfil\n        \n        \n          Cerrar sesión\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Mi Aplicación                                          Inicio                          About                           Perfil                          Cerrar sesión                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                isEditing\n                            \n                            \n                                profileForm\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                saveProfile\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveProfile\n                        \n                    \n                \n            \n            \n                \nsaveProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/profile/profile.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/profile/profile.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.css',\n})\nexport class ProfileComponent implements OnInit {\n  profileForm!: FormGroup;\n  isEditing: boolean = false; // Controla si el formulario está en modo edición\n  successMessage: string | null = null;\n  errorMessage: string | null = null;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {}\n\n  ngOnInit(): void {\n    // Recuperar datos del usuario actual desde el localStorage\n    const currentUserEmail = localStorage.getItem('currentUser');\n    if (currentUserEmail) {\n      const user = this.userService.getUserData(currentUserEmail) || {};\n      // Inicializar el formulario con los datos del usuario\n      this.profileForm = this.fb.group({\n        name: [{ value: user.name, disabled: true }, [Validators.required]],\n        email: [\n          { value: user.email, disabled: true },\n          [Validators.required, Validators.email],\n        ],\n        password: [\n          { value: '', disabled: true },\n          [Validators.required, Validators.minLength(6)],\n        ],\n        confirmPassword: [{ value: '', disabled: true }, [Validators.required]],\n      });\n    }\n  }\n\n  // Método para habilitar los campos del formulario para su edición\n  toggleEdit(): void {\n    this.isEditing = !this.isEditing;\n    if (this.isEditing) {\n      this.profileForm.get('name')?.enable();\n      this.profileForm.get('email')?.enable();\n      this.profileForm.get('password')?.enable();\n      this.profileForm.get('confirmPassword')?.enable();\n    } else {\n      this.profileForm.get('name')?.disable();\n      this.profileForm.get('email')?.disable();\n      this.profileForm.get('password')?.disable();\n      this.profileForm.get('confirmPassword')?.disable();\n    }\n  }\n\n  // Método para guardar los cambios del usuario\n  saveProfile(): void {\n    if (this.profileForm.valid) {\n      const { name, email, password, confirmPassword } = this.profileForm.value;\n\n      if (password === confirmPassword) {\n        // Actualizar la información del usuario\n        this.userService.saveUserData('email', { name, email, password });\n        this.successMessage = 'Perfil actualizado con éxito';\n        // Bloquear los campos después de guardar\n        this.toggleEdit(); // Deshabilitar el formulario después de guardar\n      } else {\n        this.errorMessage = 'Las contraseñas no coinciden';\n      }\n    } else {\n      this.errorMessage = 'Por favor, completa todos los campos correctamente.';\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Editar Perfil\n    \n      {{ successMessage }}\n      \n    \n    \n      {{ errorMessage }}\n      \n    \n    \n      \n        Nombre\n        \n      \n\n      \n        Correo Electrónico\n        \n      \n\n      \n        Contraseña\n        \n      \n\n      \n        Confirmar Contraseña\n        \n      \n\n      Editar\n      Guardar Cambios\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Editar Perfil          {{ successMessage }}                    {{ errorMessage }}                            Nombre                            Correo Electrónico                            Contraseña                            Confirmar Contraseña                    Editar      Guardar Cambios      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                registerForm\n                            \n                            \n                                registrationSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordsMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(form: AbstractControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/register/register.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { passwordsMismatch: boolean; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/register/register.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css',\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n\n  registrationSuccess: boolean = false;\n  errorMessage: string = '';\n\n  constructor(private fb: FormBuilder, private router: Router) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group(\n      {\n        name: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(50),\n            Validators.pattern('^[a-zA-Z ]*$'),\n          ],\n        ],\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.email,\n            forbiddenEmailDomain(['forbidden.com', 'test.com']),\n          ],\n        ],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(6),\n            hasNumberValidator(),\n            hasUpperAndLowerCaseValidator(),\n            hasSpecialCharacterValidator(),\n          ],\n        ],\n        confirmPassword: ['', [Validators.required]],\n      },\n      {\n        validators: this.passwordsMatchValidator,\n      }\n    );\n  }\n\n  passwordsMatchValidator(form: AbstractControl) {\n    const password = form.get('password')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n\n    return password === confirmPassword ? null : { passwordsMismatch: true };\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.valid) {\n      const { name, email, password, confirmPassword } =\n        this.registerForm.value;\n\n      if (password === confirmPassword) {\n        // Guardar el usuario en el localStorage\n        const users = JSON.parse(localStorage.getItem('users') || '[]');\n        users.push({ name, email, password });\n        localStorage.setItem('users', JSON.stringify(users));\n\n        this.registrationSuccess = true;\n        this.registerForm.reset();\n        setTimeout(() => {\n          this.router.navigate(['/login']); // Redirigir al login después del registro\n        }, 3000); // Esperar 3 segundos antes de redirigir\n      } else {\n        this.errorMessage = 'El correo electrónico ya está registrado';\n        this.registrationSuccess = false;\n        setTimeout(() => (this.errorMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n      }\n    } else {\n      this.errorMessage = 'Por favor, completa todos los campos correctamente';\n      this.registrationSuccess = false;\n      setTimeout(() => (this.errorMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    }\n  }\n}\n\n// Validador personalizado para prohibir ciertos dominios de correo\nexport function forbiddenEmailDomain(forbiddenDomains: string[]): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const email = control.value;\n    if (!email) {\n      return null; // Si el campo está vacío, no valida aún.\n    }\n    const domain = email.split('@')[1];\n    if (forbiddenDomains.includes(domain)) {\n      return { forbiddenEmailDomain: true };\n    }\n    return null; // El correo es válido.\n  };\n}\n// Validadores de tamaño de contraseña\nexport function passwordLengthValidator(\n  minLength: number,\n  maxLength: number\n): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    const value = control.value;\n    if (value && (value.length  maxLength)) {\n      return {\n        passwordLength: `La contraseña debe tener entre ${minLength} y ${maxLength} caracteres.`,\n      };\n    }\n    return null;\n  };\n}\n\n// Validadores de contraseña debe contar con un numero\nexport function hasNumberValidator() {\n  return (control: AbstractControl) => {\n    const value = control.value;\n    if (/\\d/.test(value)) {\n      return null;\n    }\n    return { hasNumber: true };\n  };\n}\n\n// Validadores de contraseña debe contar con una letra mayuscula y minuscula\n// Validador personalizado para verificar que la contraseña contenga al menos una mayúscula y una minúscula\nexport function hasUpperAndLowerCaseValidator() {\n  return (control: AbstractControl) => {\n    const value = control.value;\n    const hasUpperCase = /[A-Z]/.test(value);\n    const hasLowerCase = /[a-z]/.test(value);\n    if (hasUpperCase && hasLowerCase) {\n      return null;\n    }\n    return { hasUpperAndLowerCase: true };\n  };\n}\n\n// Validadores de contraseña debe contar con un caracter especial\nexport function hasSpecialCharacterValidator() {\n  return (control: AbstractControl) => {\n    const value = control.value;\n    if (/[!@#$%^&*(),.?\":{}|<>/+\\-_]/.test(value)) {\n      return null;\n    }\n    return { hasSpecialCharacter: true };\n  };\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            Registro\n            \n              \n              \n                Nombre\n                \n                \n                \n                    El nombre es obligatorio.\n                  \n                  \n                    El nombre debe tener al menos 3 caracteres.\n                  \n                  \n                    El nombre no puede tener más de 50 caracteres.\n                  \n                  \n                    El nombre solo puede contener letras y espacios.\n                  \n              \n            \n            \n  \n              \n              \n                Correo Electrónico\n                \n                \n              \n                El correo electrónico es obligatorio.\n              \n              \n                El correo electrónico no es válido.\n              \n              \n                Este dominio de correo no está permitido.\n              \n                \n              \n  \n              \n              \n                Contraseña\n                \n                \n                \n                  La contraseña es obligatoria.\n                \n                \n                  La contraseña debe tener al menos 6 caracteres.\n                \n                \n                  La contraseña debe contener al menos una mayúscula y una minúscula.\n                \n                \n                  La contraseña debe contener al menos un número.\n                \n                \n                  La contraseña debe contener al menos un carácter especial.\n                \n              \n  \n              \n              \n                Confirmar Contraseña\n                \n                \n                \n                    La confirmación de la contraseña es obligatoria.\n                \n                \n                    Las contraseñas no coinciden.\n                \n              \n  \n              \n              \n                \n                  Registrar\n                \n              \n            \n  \n            \n            \n              Registro exitoso. Ahora puedes iniciar sesión.\n            \n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Registro                                                        Nombre                                                                    El nombre es obligatorio.                                                        El nombre debe tener al menos 3 caracteres.                                                        El nombre no puede tener más de 50 caracteres.                                                        El nombre solo puede contener letras y espacios.                                                                                                      Correo Electrónico                                                              El correo electrónico es obligatorio.                                            El correo electrónico no es válido.                                            Este dominio de correo no está permitido.                                                                                          Contraseña                                                                  La contraseña es obligatoria.                                                  La contraseña debe tener al menos 6 caracteres.                                                  La contraseña debe contener al menos una mayúscula y una minúscula.                                                  La contraseña debe contener al menos un número.                                                  La contraseña debe contener al menos un carácter especial.                                                                            Confirmar Contraseña                                                                    La confirmación de la contraseña es obligatoria.                                                    Las contraseñas no coinciden.                                                                                              Registrar                                                                                  Registro exitoso. Ahora puedes iniciar sesión.                                            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TodoComponent.html":{"url":"components/TodoComponent.html","title":"component - TodoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TodoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/todo/todo.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para gestionar las tareas del usuario.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-todo\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./todo.component.html\n            \n\n\n\n            \n                styleUrl\n                ./todo.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                filter\n                            \n                            \n                                successMessage\n                            \n                            \n                                taskContent\n                            \n                            \n                                tasks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTask\n                            \n                            \n                                deleteTask\n                            \n                            \n                                editTask\n                            \n                            \n                                getTasks\n                            \n                            \n                                loadTasks\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveTasks\n                            \n                            \n                                toggleTaskCompletion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    filteredTasks\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(todoService: TodoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/todo/todo.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        todoService\n                                                  \n                                                        \n                                                                        TodoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTask\n                        \n                    \n                \n            \n            \n                \naddTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTask\n                        \n                    \n                \n            \n            \n                \ndeleteTask(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTask\n                        \n                    \n                \n            \n            \n                \neditTask(taskId: number, newContent: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTasks\n                        \n                    \n                \n            \n            \n                \nloadTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Carga las tareas del usuario actual desde el localStorage.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveTasks\n                        \n                    \n                \n            \n            \n                \nsaveTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTaskCompletion\n                        \n                    \n                \n            \n            \n                \ntoggleTaskCompletion(taskId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/todo/todo.component.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                taskId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todo/todo.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"all\" | \"completed\" | \"pending\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/app/todo/todo.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todo/todo.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/todo/todo.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/todo/todo.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        filteredTasks\n                    \n                \n\n                \n                    \n                        getfilteredTasks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/todo/todo.component.ts:169\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { TodoService } from '../services/todo.service';\n\n/**\n * Componente para gestionar las tareas del usuario.\n */\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrl: './todo.component.css',\n})\nexport class TodoComponent implements OnInit {\n  successMessage: string = ''; // Mensaje de éxito\n  errorMessage: string = ''; // Mensaje de error\n  filter: 'all' | 'completed' | 'pending' = 'all'; // Opciones: 'all', 'completed', 'pending'\n  taskContent: string = ''; // Contenido de la tarea\n  tasks: {\n    id: number;\n    content: string;\n    completed: boolean;\n    editing: boolean;\n  }[] = []; // Lista de tareas\n\n  constructor(private todoService: TodoService) {\n    this.loadTasks();\n  }\n\n  ngOnInit(): void {\n    this.getTasks();\n    if (this.tasks.length === 0) {\n      this.getTasks();\n    }\n  }\n\n  getTasks(): void {\n    this.todoService.getTasks().subscribe(\n      (data) => {\n        if (this.tasks.length === 0) {\n          console.log('Datos cargados:', data); // Verificar datos en la consola\n          this.tasks = data;\n        }\n      },\n      (error) => {\n        console.error('Error al cargar las tareas:', error); // Verificar errores en la consola\n        this.errorMessage = 'Error al cargar las tareas';\n      }\n    );\n  }\n\n  /*getTasks(): void {\n    this.todoService.getTasks().subscribe(\n      (data) => {\n        console.log('Datos cargados:', data); // Verificar datos en la consola\n        this.tasks = data;\n      },\n      (error) => {\n        console.error('Error al cargar las tareas:', error); // Verificar errores en la consola\n        this.errorMessage = 'Error al cargar las tareas';\n      }\n    );\n  }*/\n\n  /**\n   * Carga las tareas del usuario actual desde el localStorage.\n   */\n  loadTasks(): void {\n    const currentUser = localStorage.getItem('currentUser');\n    if (currentUser) {\n      const tasks = JSON.parse(\n        localStorage.getItem(currentUser + '_tasks') || '[]'\n      );\n      this.tasks = tasks;\n    }\n  }\n  /*loadTasks(): void {\n    const currentUser = localStorage.getItem('currentUser');\n    if (currentUser) {\n      const tasks = JSON.parse(\n        localStorage.getItem(currentUser + '_tasks') || '[]'\n      );\n      this.tasks = tasks;\n      if (this.tasks.length === 0) {\n        this.successMessage = 'No hay tareas guardadas';\n        setTimeout(() => (this.successMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n      }\n    } else {\n      this.errorMessage = 'Por favor inicie sesión para cargar las tareas';\n      setTimeout(() => (this.errorMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    }\n  }*/\n\n  // Agregar una nueva tarea\n  addTask(): void {\n    if (this.taskContent.trim()) {\n      const newTask = {\n        id: Date.now(),\n        content: this.taskContent,\n        completed: false,\n        editing: false,\n      };\n      this.tasks.push(newTask);\n      this.taskContent = ''; // Limpiar el campo de texto después de agregar\n      this.saveTasks(); // Guardar las tareas actualizadas\n      this.successMessage = 'Tarea agregada exitosamente';\n      setTimeout(() => (this.successMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    } else {\n      this.errorMessage = 'El contenido de la tarea no puede estar vacío';\n      setTimeout(() => (this.errorMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    }\n  }\n\n  // Eliminar una tarea\n  deleteTask(taskId: number): void {\n    const taskIndex = this.tasks.findIndex((task) => task.id === taskId);\n    if (taskIndex !== -1) {\n      this.tasks.splice(taskIndex, 1); // Eliminar la tarea de la lista\n      this.saveTasks(); // Guardar las tareas actualizadas\n      this.successMessage = 'Tarea eliminada exitosamente';\n      setTimeout(() => (this.successMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    } else {\n      this.errorMessage = 'No se pudo encontrar la tarea para eliminar';\n      setTimeout(() => (this.errorMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    }\n  }\n  // Guardar las tareas del usuario en el localStorage\n  saveTasks(): void {\n    const currentUser = localStorage.getItem('currentUser');\n    if (currentUser) {\n      localStorage.setItem(currentUser + '_tasks', JSON.stringify(this.tasks));\n      this.successMessage = 'Tareas guardadas exitosamente';\n      setTimeout(() => (this.successMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    } else {\n      this.errorMessage = 'Por favor inicie sesión para guardar las tareas';\n      setTimeout(() => (this.errorMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    }\n  }\n\n  toggleTaskCompletion(taskId: number): void {\n    // Marcar una tarea como completada o pendiente\n    const task = this.tasks.find((t) => t.id === taskId);\n    if (task) {\n      task.completed = !task.completed;\n      this.saveTasks(); // Guardar el estado actualizado\n      this.successMessage = task.completed\n        ? 'Tarea marcada como completada'\n        : 'Tarea marcada como pendiente';\n      setTimeout(() => (this.successMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    }\n  }\n\n  // Método para editar una tarea\n  editTask(taskId: number, newContent: string): void {\n    const taskIndex = this.tasks.findIndex((task) => task.id === taskId);\n    if (taskIndex !== -1) {\n      this.tasks[taskIndex].content = newContent; // Actualizar contenido\n      this.saveTasks(); // Guardar cambios en el localStorage\n      this.successMessage = 'Tarea editada exitosamente';\n      setTimeout(() => (this.successMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    } else {\n      this.errorMessage = 'No se pudo encontrar la tarea para editar';\n      setTimeout(() => (this.errorMessage = ''), 3000); // Mensaje desaparece después de 3 segundos\n    }\n  }\n\n  //Filtrar tareas\n  get filteredTasks() {\n    if (this.filter === 'completed') {\n      return this.tasks.filter((task) => task.completed);\n    } else if (this.filter === 'pending') {\n      return this.tasks.filter((task) => !task.completed);\n    }\n    return this.tasks;\n  }\n}\n\n    \n\n    \n        \n  Gestión de Tareas\n  \n    {{ successMessage }}\n  \n  \n    {{ errorMessage }}\n  \n\n  \n  \n    \n      \n        \n        Agregar\n      \n    \n  \n\n  \n  \n    \n      \n        \n          Todas\n        \n        \n          Completadas\n        \n        \n          Pendientes\n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n          \n          \n            \n          \n\n          \n          \n            {{ task.content }}\n          \n          \n\n          \n          \n            \n              Editar\n            \n            \n              Guardar\n            \n            \n              Eliminar\n            \n          \n        \n      \n    \n  \n\n\n  \n  \n    \n      Guardar Lista de Tareas\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Gestión de Tareas      {{ successMessage }}        {{ errorMessage }}                                Agregar                                            Todas                          Completadas                          Pendientes                                                                                                                    {{ task.content }}                                                                  Editar                                      Guardar                                      Eliminar                                                        Guardar Lista de Tareas      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ForgotpasswordComponent', 'selector': 'app-forgotpassword'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TodoComponent', 'selector': 'app-todo'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TodoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TodoService.html":{"url":"injectables/TodoService.html","title":"injectable - TodoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TodoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/todo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jsonUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTasks\n                            \n                            \n                                    Private\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/todo.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTasks\n                        \n                    \n                \n            \n            \n                \ngetTasks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/todo.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/todo.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsonUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://mibuckectsum3.s3.us-east-1.amazonaws.com/tareas.json'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/todo.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TodoService {\n  private jsonUrl =\n    'https://mibuckectsum3.s3.us-east-1.amazonaws.com/tareas.json'; // URL de tu API\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable {\n    return this.http.get(this.jsonUrl).pipe(catchError(this.handleError));\n  }\n\n  private handleError(error: any): Observable {\n    console.error('An error occurred', error);\n    return throwError(() => new Error(error.message || 'Server error'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn$\n                            \n                            \n                                    Private\n                                isLoggedInSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkLoginStatus\n                            \n                            \n                                getUserData\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                saveUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkLoginStatus\n                        \n                    \n                \n            \n            \n                \ncheckLoginStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserData\n                        \n                    \n                \n            \n            \n                \nsaveUserData(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.isLoggedInSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isLoggedInSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private isLoggedInSubject = new BehaviorSubject(false);\n  isLoggedIn$ = this.isLoggedInSubject.asObservable();\n\n  constructor() {\n    this.checkLoginStatus();\n  }\n\n  // Verificar si el usuario está logeado\n  checkLoginStatus(): void {\n    const currentUser = localStorage.getItem('currentUser');\n    this.isLoggedInSubject.next(!!currentUser); // Actualiza el estado basado en la presencia del usuario\n  }\n\n  // Iniciar sesión\n  login(username: string): void {\n    localStorage.setItem('currentUser', username);\n    this.isLoggedInSubject.next(true);\n  }\n\n  // Cerrar sesión\n  logout(): void {\n    localStorage.removeItem('currentUser');\n    this.isLoggedInSubject.next(false);\n  }\n\n  saveUserData(key: string, value: any): void {\n    const currentUser = localStorage.getItem('currentUser');\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n    if (!currentUser) {\n      alert('No hay usuario logueado');\n      return;\n    }\n\n    const userIndex = users.findIndex(\n      (user: any) => user.email === currentUser\n    ); // Cambia \"username\" a \"email\" si usas email\n\n    if (userIndex !== -1) {\n      // Actualiza los datos del usuario con el nuevo nombre, email y contraseña\n      users[userIndex] = { ...users[userIndex], ...value };\n      localStorage.setItem('users', JSON.stringify(users));\n      localStorage.setItem('currentUser', value.email); // Actualizar el email del usuario logueado\n    }\n  }\n\n  // Obtener los datos del usuario\n  getUserData(email: string): any {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    return users.find((user: any) => user.email === email) || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/forgotpassword/forgotpassword.component.ts\n            \n            component\n            ForgotpasswordComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/register/register.component.ts\n            \n            function\n            forbiddenEmailDomain\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/register/register.component.ts\n            \n            function\n            hasNumberValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/register/register.component.ts\n            \n            function\n            hasSpecialCharacterValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/register/register.component.ts\n            \n            function\n            hasUpperAndLowerCaseValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/register/register.component.ts\n            \n            function\n            passwordLengthValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/todo.service.ts\n            \n            injectable\n            TodoService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/todo/todo.component.ts\n            \n            component\n            TodoComponent\n            \n                13 %\n                (2/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            forbiddenEmailDomain   (src/.../register.component.ts)\n                        \n                        \n                            hasNumberValidator   (src/.../register.component.ts)\n                        \n                        \n                            hasSpecialCharacterValidator   (src/.../register.component.ts)\n                        \n                        \n                            hasUpperAndLowerCaseValidator   (src/.../register.component.ts)\n                        \n                        \n                            passwordLengthValidator   (src/.../register.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/register/register.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        forbiddenEmailDomain\n                        \n                    \n                \n            \n            \n                \nforbiddenEmailDomain(forbiddenDomains)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                forbiddenDomains\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasNumberValidator\n                        \n                    \n                \n            \n            \n                \nhasNumberValidator()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasSpecialCharacterValidator\n                        \n                    \n                \n            \n            \n                \nhasSpecialCharacterValidator()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpperAndLowerCaseValidator\n                        \n                    \n                \n            \n            \n                \nhasUpperAndLowerCaseValidator()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordLengthValidator\n                        \n                    \n                \n            \n            \n                \npasswordLengthValidator(minLength: number, maxLength: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                minLength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                maxLength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNotesApp\nThis project was generated with Angular CLI version 18.2.12.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nForgotpasswordComponent\n\nForgotpasswordComponent\n\nAppModule -->\n\nForgotpasswordComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTodoComponent\n\nTodoComponent\n\nAppModule -->\n\nTodoComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nTodoService\n\nTodoService\n\nAppModule -->\n\nTodoService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
